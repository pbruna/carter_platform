input {
  syslog {
	port => 5544
	type => "syslog"
  }

  #file {
  #	discover_interval => 2
  #	path => "/tmp/test_log"
  #	type => "syslog"
  #}

}

filter {
	
  grok {
	type => "syslog"
	add_tag => "noqueue_run"
	pattern => "%{SYSLOGBASE} NOQUEUE: %{WORD:status}: RCPT from %{HOSTNAME:src_hostname}\[%{IP:src_ipaddress}\]: %{DATA:response_text}; from=<%{DATA:src_email_address}> to=<%{DATA:dst_email_address}> %{DATA}"
  }
	
  grok {
	type => "syslog"
	add_tag => "new_request"
	pattern => "%{SYSLOGBASE} %{MAIL_ID:queue_id}: client=%{HOSTNAME:src_hostname}\[%{IP:src_ipaddress}\](, sasl_method=%{WORD}, sasl_username=%{DATA:sasl_username})?"
  }

  grok {
	type => "syslog"
	add_tag => ["message_id"]
	pattern => "%{SYSLOGBASE} %{MAIL_ID:queue_id}: message-id=<%{DATA:message_id}>"
  }

  grok {
	type => "syslog"
	add_tag => "queue_run"
	pattern => "%{SYSLOGBASE} %{MAIL_ID:queue_id}: from=<%{MAIL_ADDRESS:src_email_address}>, size=%{INT:size}, nrcpt=%{INT:dst_qty}"
  }

  grok {
	type => "syslog"
	add_tag => "amavis_run"
	pattern => "%{SYSLOGBASE} (%{DATA}) %{WORD:amavis_status} %{WORD:amavis_result}, %{DATA},(quarantine: %{DATA:quarantine_file},)? Message-ID: <%{DATA:message_id}>, %{DATA}, Hits: %{DATA:amavis_hits}, size: %{INT:amavis_size},( queued_as: %{MAIL_ID:queue_id},)? (%{DATA:amavis_extra},)? %{NUMBER:amavis_delay} %{WORD}"
  }

  grok {
        type => "syslog"
        add_tag => "smtp_run"
        pattern => "%{SYSLOGBASE} %{MAIL_ID:queue_id}: to=<%{MAIL_ADDRESS:dst_email_address}>, relay=(%{HOSTNAME:dst_server_name})?(\[%{IP:dst_server_ipaddress}\]:%{INT:dst_port})?(%{WORD})?, delay=%{BASE10NUM:delay}, delays=%{BASE10NUM}\/%{BASE10NUM}\/%{BASE10NUM}\/%{BASE10NUM}, dsn=%{INT}\.%{INT}\.%{INT}, status=%{WORD:status} \(%{DATA:response_text}\)"
  }

  grok {
	type => "syslog"
	add_tag => "queue_finish"
	pattern => "%{SYSLOGBASE} %{MAIL_ID:queue_id}: removed"
  }

}

output {
	carter {
			type => "syslog"
			host => "localhost"
			database =>  "carterapp"
			collection => "requests"
		 }
}